{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n\nexport function walkSkippingNestedComponents(el, callback, isRoot = true) {\n    if (el.hasAttribute('x-data') && ! isRoot) return\n\n    callback(el)\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walkSkippingNestedComponents(node, callback, false)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            el.classList.remove(...classesStart)\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring)\n                    el.classList.remove(...classesEnd)\n                }\n            }, duration);\n        })\n    });\n}\n","import { arrayUnique, walkSkippingNestedComponents, keyToModifier, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements()\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.refresh()\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    initializeElements() {\n        walkSkippingNestedComponents(this.$el, el => {\n            this.initializeElement(el)\n        })\n    }\n\n    initializeElement(el) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__originalClasses = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el)\n        this.resolveBoundAttributes(el, true)\n    }\n\n    registerListeners(el) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    var event = value\n                    this.registerListener(el, event, modifiers, expression)\n                    break;\n\n                case 'model':\n                    // If the element we are binding to is a select, a radio, or checkbox\n                    // we'll listen for the change event instead of the \"input\" event.\n                    var event = (el.tagName.toLowerCase() === 'select')\n                        || ['checkbox', 'radio'].includes(el.type)\n                        || modifiers.includes('lazy')\n                        ? 'change' : 'input'\n\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\n\n                    this.registerListener(el, event, modifiers, listenerExpression)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    var attrName = 'value'\n                    var output = this.evaluateReturnExpression(expression)\n                    if ( undefined === output && expression.match(/\\./).length ) output = ''\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'bind':\n                    var attrName = value\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateTextValue(el, output)\n                    break;\n\n                case 'html':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateHtmlValue(el, output)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateVisibility(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updatePresence(el, output)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) return\n\n                        if (getXAttrs(node).length > 0) {\n                            this.initializeElement(node)\n                        }\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    refresh() {\n        walkSkippingNestedComponents(this.$el, el => {\n            this.resolveBoundAttributes(el)\n        })\n    }\n\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\n        var rightSideOfExpression = ''\n        if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(this.$data[dataKey])) {\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n            } else {\n                rightSideOfExpression = `$event.target.checked`\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n        } else {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'parseFloat($event.target.value)'\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n        }\n\n        if (el.type === 'radio') {\n            // Radio buttons only work properly when they share a name attribute.\n            // People might assume we take care of that for them, because\n            // they already set a shared \"x-model\" attribute.\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n        }\n\n        return `${dataKey} = ${rightSideOfExpression}`\n    }\n\n    registerListener(el, event, modifiers, expression) {\n        if (modifiers.includes('away')) {\n            const handler = e => {\n                // Don't do anything if the click came form the element or within it.\n                if (el.contains(e.target)) return\n\n                // Don't do anything if this element isn't currently visible.\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n                // Now that we are sure the element is visible, AND the click\n                // is from outside it, let's run the expression.\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    document.removeEventListener(event, handler)\n                }\n            }\n\n            // Listen for this event at the root level.\n            document.addEventListener(event, handler)\n        } else {\n            const listenerTarget = modifiers.includes('window')\n                ? window : (modifiers.includes('document') ? document : el)\n\n            const handler = e => {\n                const keyModifiers = modifiers.filter(i => i !== 'window').filter(i => i !== 'document')\n\n                // The user is scoping the keydown listener to a specific key using modifiers.\n                if (event === 'keydown' && keyModifiers.length > 0) {\n                    // The user is listening for a specific key.\n                    if (keyModifiers.length === 1 && ! keyModifiers.includes(keyToModifier(e.key))) return\n\n                    // The user is listening for key combinations.\n                    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n                    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n                    if (selectedSystemKeyModifiers.length > 0) {\n                        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n                            // Alias \"cmd\" and \"super\" to \"meta\"\n                            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n                            return e[`${modifier}Key`]\n                        })\n\n                        if (activelyPressedKeyModifiers.length === 0) return\n                    }\n                }\n\n                if (modifiers.includes('prevent')) e.preventDefault()\n                if (modifiers.includes('stop')) e.stopPropagation()\n\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n\n            listenerTarget.addEventListener(event, handler)\n        }\n    }\n\n    runListenerHandler(expression, e) {\n        this.evaluateCommandExpression(expression, {\n            '$event': e,\n        })\n    }\n\n    evaluateReturnExpression(expression) {\n        return saferEval(expression, this.$data)\n    }\n\n    evaluateCommandExpression(expression, extraData) {\n        saferEvalNoReturn(expression, this.$data, extraData)\n    }\n\n    updateTextValue(el, value) {\n        el.innerText = value\n    }\n\n    updateHtmlValue(el, value) {\n        el.innerHTML = value\n    }\n\n    updateVisibility(el, value, initialUpdate = false) {\n        if (! value) {\n            transitionOut(el, () => {\n                el.style.display = 'none'\n            }, initialUpdate)\n        } else {\n            transitionIn(el, () => {\n                if (el.style.length === 1 && el.style.display !== '') {\n                    el.removeAttribute('style')\n                } else {\n                    el.style.removeProperty('display')\n                }\n            }, initialUpdate)\n        }\n    }\n\n    updatePresence(el, expressionResult) {\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\n\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\n            const clone = document.importNode(el.content, true);\n\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n            el.nextElementSibling.__x_inserted_me = true\n\n            transitionIn(el.nextElementSibling, () => {})\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n            transitionOut(el.nextElementSibling, () => {\n                el.nextElementSibling.remove()\n            })\n        }\n    }\n\n    updateAttributeValue(el, attrName, value) {\n        if (attrName === 'value') {\n            if (el.type === 'radio') {\n                el.checked = el.value == value\n            } else if (el.type === 'checkbox') {\n                if (Array.isArray(value)) {\n                    // I'm purposely not using Array.includes here because it's\n                    // strict, and because of Numeric/String mis-casting, I\n                    // want the \"includes\" to be \"fuzzy\".\n                    let valueFound = false\n                    value.forEach(val => {\n                        if (val == el.value) {\n                            valueFound = true\n                        }\n                    })\n\n                    el.checked = valueFound\n                } else {\n                    el.checked = !! value\n                }\n            } else if (el.tagName === 'SELECT') {\n                this.updateSelect(el, value)\n            } else {\n                el.value = value\n            }\n        } else if (attrName === 'class') {\n            if (Array.isArray(value)) {\n                const originalClasses = el.__originalClasses || []\n                el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n            } else if (typeof value === 'object') {\n                Object.keys(value).forEach(classNames => {\n                    if (value[classNames]) {\n                        classNames.split(' ').forEach(className => el.classList.add(className))\n                    } else {\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\n                    }\n                })\n            } else {\n                const originalClasses = el.__originalClasses || []\n                const newClasses = value.split(' ')\n                el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n            }\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n            // Boolean attributes have to be explicitly added and removed, not just set.\n            if (!! value) {\n                el.setAttribute(attrName, '')\n            } else {\n                el.removeAttribute(attrName)\n            }\n        } else {\n            el.setAttribute(attrName, value)\n        }\n    }\n\n    updateSelect(el, value) {\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n        Array.from(el.options).forEach(option => {\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\n        })\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                walkSkippingNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) callback(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        el.__x = new Component(el)\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","walkSkippingNestedComponents","el","callback","isRoot","hasAttribute","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","initializeElements","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","refresh","shift","context","args","arguments","later","apply","clearTimeout","get","target","key","isRefsProxy","Node","Proxy","initializeElement","__originalClasses","registerListeners","resolveBoundAttributes","forEach","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","initialUpdate","attrName","undefined","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closest","isSameNode","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","preventDefault","stopPropagation","evaluateCommandExpression","extraData","innerText","innerHTML","style","display","removeProperty","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","originalClasses","join","classNames","className","newClasses","arrayWrappedValue","options","option","selected","text","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEl","rootEls","__x","querySelector"],"mappings":"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"}